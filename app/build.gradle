apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

android {
    compileSdk 35
    defaultConfig {
        applicationId "kr.re.keti.mobiussampleapp_v25"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'kr.re.keti.mobiussampleapp_v25'
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        buildConfig = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    secrets {
        // To add your Maps API key to this project:
        // 1. If the secrets.properties file does not exist, create it in the same folder as the local.properties file.
        // 2. Add this line, where YOUR_API_KEY is your API key:
        //        MAPS_API_KEY=YOUR_API_KEY
        propertiesFileName = "secrets.properties"

        // A properties file containing default secret values. This file can be
        // checked in version control.
        defaultPropertiesFileName = "local.defaults.properties"

        // Configure which keys should be ignored by the plugin by providing regular expressions.
        // "sdk.dir" is ignored by default.
        ignoreList.add("keyToIgnore") // Ignore the key "keyToIgnore"
        ignoreList.add("sdk.*")       // Ignore all keys matching the regexp "sdk.*"
    }
}

dependencies {
    implementation 'androidx.databinding:viewbinding:8.7.2'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.work:work-runtime-ktx:2.10.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.8.7'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.8.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.8.4'
    implementation 'androidx.navigation:navigation-runtime-ktx:2.8.4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // new implementations for mqtt service in android 12+
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.github.hannesa2:paho.mqtt.android:3.3.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation "androidx.room:room-ktx:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    // Add below to fix Runtime error(ClassNotFoundException)
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'

    // Google Maps
    implementation 'com.google.android.gms:play-services-maps:19.0.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'

    androidTestImplementation 'org.testng:testng:6.9.6'
}
